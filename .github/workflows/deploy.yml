name: Deploy on AWS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Debug - List submodule files
        run: ls -la ./BAckend/EcommerceInventory

      - name: Navigate to Django submodule
        working-directory: ./BAckend/EcommerceInventory # Key change
        run: pwd # Verify location

      # 3. Create .env in the submodule
      - name: Create .env for Django
        working-directory: ./BAckend/EcommerceInventory
        run: |
          cat <<EOF > .env
          SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          DEBUG=False
          DATABASE_HOST=${{ secrets.DATABASE_HOST }}
          DATABASE_NAME=${{ secrets.DATABASE_NAME }}
          DATABASE_USER=${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
          DATABASE_PORT=${{ secrets.DATABASE_PORT }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_ACCESS_KEY_SECRET=${{ secrets.AWS_ACCESS_KEY_SECRET }}
          AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}
          AWS_S3_REGION_NAME=${{ secrets.AWS_S3_REGION_NAME }}
          EOF

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ecommerce-backend:latest
          build-args: |
            SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.AWS_EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.AWS_EC2_IP }} >> ~/.ssh/known_hosts

      - name: Deploy on AWS EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.AWS_EC2_IP }} << 'EOF'
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/ecommerce-backend:latest
            docker stop ecommerce-backend || true
            docker rm ecommerce-backend || true
            docker run -d \
             --name ecommerce-backend \
             -p 80:8000 \
             -e SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} \
             -e DB_HOST=${{ secrets.DATABASE_HOST }} \
             -e DB_NAME=${{ secrets.DATABASE_NAME }} \
             -e DB_USER=${{ secrets.DATABASE_USER }} \
             -e DB_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \ 
             ${{ secrets.DOCKER_USERNAME }}/ecommerce-backend:latest
          EOF
